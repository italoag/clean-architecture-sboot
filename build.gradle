buildscript {
    ext {
        set('springCloudAzureVersion', "4.0.0")
        set('springBootVersion', "2.6.6")
        set('springCloudVersion', "2021.0.1")
        set('sonarVersion', "3.0")
        set('jacocoVersion', "0.8.5")
        set('springCloudSleuthOtelVersion', "1.1.0-M5")
    }
}

plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    // Checker Framework pluggable type-checking
    id 'org.checkerframework' version '0.6.10'
    id 'org.sonarqube' version "${sonarVersion}"
    id 'jacoco'
}

sonarqube {
    properties {
        property "sonar.sourceEnconding", "UTF-8"
        property "sonar.modules", "applications/service," +
                "domain/entity, domain/usecase," +
                "infrastructure/persistence/*, infrastructure/rest/*"
        property "sonar.sources", "src, deployment, build.gradle, applications/app-service/build.gradle"
        property "sonar.test", "src/test"
        property "sonar.java.binaries", ""
        property "sonar.junit.reportsPath", ""
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
    }
}

group = 'tech.eita'
version = '1.0.0'
sourceCompatibility = JavaVersion.VERSION_11

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


ext {
    set('springCloudAzureVersion', "4.0.0")
    set('springCloudVersion', "2021.0.1")
    set('springCloudSleuthOtelVersion', "1.1.0-M5")
}


apply plugin: 'org.checkerframework'

checkerFramework {
    checkers = [
            'org.checkerframework.checker.nullness.NullnessChecker',
            'org.checkerframework.checker.units.UnitsChecker'
    ]
}

tasks.named('test') {
    useJUnitPlatform()
}

apply from: './main.gradle'